package proyectocompi;
import java_cup.runtime.*;

parser code{:

:};

terminal Number;
terminal String VariableName, BooleanValue, Type, MultOP, DivOP, AddOP, SubOP, Assign, PlusEqual,MinusEqual,MultEqual,DivEqual, 
                EOL, STRING, Delimeter, leftParenthesis, rightParenthesis,ThreePoints,And,Or,Equal,NotEqual,GreaterThan,
                LessThan,GreaterEqual,LessEqual,
                If,Elseif,Endif,Else,Then,
                Case, Endcase,Default,LeftKey,RightKey,Switch,TwoPoints,Function,Call,Main,Return;

non terminal String leftValue, Assignment,MultipleAssignment,Declaration, AddSub,MultDiv,ArithmeticOperation, Comparison,
					MultipleComparison, AndOr, IF, ELSEIF, RelationalOperator,AssignmentOperator, SWITCH,CASE,FUNCTION,Params,
					MultipleParams,ParamsOrEmpty,CALL, CallParams, CallMultipleParams,CallParamsOrEmpty,BODY,MAIN,PROGRAM,
					SingleAssignment, RETURN, CaseValues;


/*Gramatica del programa*/
PROGRAM ::= MAIN FUNCTION;
/*Gramatica para main*/
MAIN ::= Main leftParenthesis rightParenthesis LeftKey BODY RightKey;

/*Gramatica para el body del programa*/
BODY ::=  Declaration EOL BODY | CALL EOL BODY | IF BODY | SWITCH BODY |SingleAssignment EOL BODY|; 

/*Gramatica para llamados a funciones*/
CALL ::= Call VariableName leftParenthesis CallParamsOrEmpty rightParenthesis;
CallParams ::= leftValue CallMultipleParams;
CallMultipleParams ::= Delimeter CallParams|;
CallParamsOrEmpty ::= CallParams|;

/*Gramatica para funciones*/
FUNCTION ::= Function VariableName leftParenthesis ParamsOrEmpty rightParenthesis TwoPoints Type LeftKey BODY RETURN RightKey FUNCTION|;
Params ::= Type VariableName MultipleParams;
MultipleParams ::= Delimeter Params|;
ParamsOrEmpty ::= Params|;
RETURN ::= Return leftValue EOL | ;

/*Gramatica para declaraciones y asignaciones*/
Declaration ::= Type Assignment;
Assignment ::= VariableName AssignmentOperator leftValue MultipleAssignment|VariableName MultipleAssignment;
SingleAssignment ::= VariableName AssignmentOperator leftValue;
MultipleAssignment ::= Delimeter Assignment|;
leftValue ::= AddSub|BooleanValue|STRING|CALL;
AssignmentOperator ::= Assign | PlusEqual | MinusEqual | MultEqual | DivEqual;


/*Gramatica para switch*/
SWITCH ::= Switch leftParenthesis VariableName rightParenthesis LeftKey CASE Case Default TwoPoints BODY Endcase EOL RightKey;
CASE ::= CASE Case CaseValues TwoPoints BODY Endcase EOL|;
CaseValues ::= AddSub|BooleanValue|STRING;
/*Gramatica para if*/
IF ::= If leftParenthesis Comparison rightParenthesis Then BODY ELSEIF Endif;
ELSEIF ::= Elseif leftParenthesis Comparison rightParenthesis Then BODY  ELSEIF | Else BODY |;

/*Gramatica para operaciones matematicas*/
AddSub ::= AddSub AddOP MultDiv | AddSub SubOP MultDiv | MultDiv;
MultDiv ::= MultDiv MultOP ArithmeticOperation | MultDiv DivOP ArithmeticOperation | ArithmeticOperation;  
ArithmeticOperation ::= VariableName | Number | leftParenthesis AddSub rightParenthesis;

/*Gramatica para comparaciones*/
Comparison ::= leftValue RelationalOperator leftValue MultipleComparison;
MultipleComparison ::= AndOr Comparison|;
AndOr ::= And|Or;
RelationalOperator ::= Equal | NotEqual | GreaterThan | LessThan | GreaterEqual | LessEqual;

/*Gramatica para for*/

/*Gramatica para while*/
